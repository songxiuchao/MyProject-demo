server:
  port: 8091

spring:
  application:
    name: dev02
  rabbitmq:
    host: 172.18.1.109 #192.168.136.130
    port: 5672
    username: admin
    password: 123456
    virtual-host: /
    connection-timeout: 15000
    publisher-returns: true #支持发布返回
    listener:
      simple:
        acknowledge-mode: manual
      direct:
        retry:
          enabled: true  #是否支持重试
    publisher-confirms: true  #支持发布确认
  redis:
    cluster:
      nodes: 127.0.0.1:6380   # REDIS 集群(RedisProperties)  ,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384
    jedis:
      pool:
        max-active: 500 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 30  # 连接池中的最大空闲连接
        min-idle: 5   # 连接池中的最小空闲连接~
        max-wait: 3000  # 连接池最大阻塞等待时间（使用负值表示没有限制）
    timeout: 10000  # 连接超时时间（毫秒）
  #  redis:
#    host: 172.18.0.139
#    port: 7000
#    password: test123
#    timeout: 3000
#    database: 0
#    jedis:
#      pool:
#        max-active: 100
#        max-wait: 3000
#        max-idle: 8
#        min-idle: 0
  datasource:
    #Mysql链接
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC&nullCatalogMeansCurrent=true
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Mycat连接
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:8066/demo?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
#    username: root
#    password: 123456
    pool:
      max-active: 100
      max-wait: 60000
      max-idle: 10
      min-idle: 1
  thymeleaf:
    prefix: classpath:/templates/
  #  kafka:
#    bootstrap-servers: 192.168.136.130:9092 #,127.0.0.2:9092,127.0.0.3:9092
#    #生产者
#    producer:
#      retries: 0
#      batch-size: 16384 #65536
#      buffer-memory: 33554432 #524288
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      properties:
#        linger.ms: 1
#    #消费者
#    consumer:
#      group-id: ideal-consumer-group
#        # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
#      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
#      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
#      auto-offset-reset: earliest
#      enable-auto-commit: true #表示在auto.commit.interval.ms时间后会自动提交topic的offset，其中auto.commit.interval.ms默认值为5000ms；
#      auto-commit-interval: 20000
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        session.timeout.ms: 15000
  data:
    elasticsearch:
      cluster-name: elasticsearch-cluster
      cluster-nodes: 172.18.1.244:9300
      repositories:
        enabled: true
        # MongoDB
    mongodb:
        uri: mongodb://yohi:yohi190603@172.18.0.139:27017/yohi_platform
      #uri: mongodb://root:123456@localhost:27017/demo
    solr:
      host: http://127.0.0.1:8983/solr
  activemq:
    #ActiveMQ通讯地址
    broker-url: tcp://localhost:61616
    #用户名
    user: admin
    #密码
    password: admin
    #是否启用内存模式（就是不安装MQ，项目启动时同时启动一个MQ实例）
    in-memory: false
    packages:
      #信任所有的包
      trust-all: true
    pool:
      #是否替换默认的连接池，使用ActiveMQ的连接池需引入的依赖
      enabled: false


mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
  type-aliases-package: com.example.demo

mybatis-plus:
  typeAliasesPackage: com.example.demo.JWTSecurity.dao
  mapper-locations: classpath:mybatis/mapper/*.xml

#netty
netty:
  server:
    url:  127.0.0.1
    port: 16001


swagger:
  enabled: true
#  title: oms-API
#  description: API文档
#  base-package:  com.example.demo
#  base-path: /**
#  exclude-path: /
#  version: @project.version@



pagehelper:
  helper-dialect: mysql
  reasonable: false
  support-methods-arguments: true
  params: count=countSql


fdfs:
  so-timeout: 1500
  connect-timeout: 600
  thumb-image:
    width: 150
    height: 120
  tracker-list: 172.18.0.139:22122

#日志
logging:
  config: classpath:logback-spring.xml


filter:
  name: test
  expectedInsertions: 1000
  fpp: 0.001



